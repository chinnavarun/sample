<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="sample-suite.xml" />
	<munit:test name="sampleFlow-test" doc:id="2fc8c640-36f6-4251-bf29-9584e3e4a3c4" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="1ee04f43-6e9a-43e7-816e-50828779e63a" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="def7177e-bd5c-487d-99b8-98d222f708b7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://sampleFlowtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f7aa47fd-a781-4368-8632-fbdeefa60582" >
				<munit:payload value="#[readUrl('classpath://sampleFlowtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://sampleFlowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sampleFlow" doc:id="dc593621-34a5-4906-8ac5-08b247392ab3" name="sampleFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="73b2e43f-82c1-4da9-bd2b-02934e08eb29" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sampleFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
